// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id              String    @id @default(cuid())
  spotifyId       String    @unique
  email           String    @unique
  displayName     String?
  images          Json?     // Array of Spotify image objects
  accessToken     String    // Encrypted
  refreshToken    String    // Encrypted
  tokenExpiresAt  DateTime
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  sessions        Session[]
  ownedRooms      Room[]    @relation("RoomOwner")
  roomMemberships RoomMember[]

  @@map("users")
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  token     String   @unique // JWT token
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@map("sessions")
}

model Room {
  id          String   @id @default(cuid())
  code        String   @unique // 6-digit room code
  name        String
  ownerId     String
  owner       User     @relation("RoomOwner", fields: [ownerId], references: [id], onDelete: Cascade)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  members     RoomMember[]

  @@map("rooms")
}

model RoomMember {
  id        String   @id @default(cuid())
  roomId    String
  room      Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  joinedAt  DateTime @default(now())
  isActive  Boolean  @default(true)

  @@unique([roomId, userId])
  @@map("room_members")
}

